@model GCTWeb.Models.ViewModels.ProductCategoryViewModel

@{
	ViewData["Title"] = "Index";
	Layout = "../Shared/_Layout.cshtml";
}

<!-- Product -->
<div class="bg0 p-b-140">
	<div class="container">
		<div class="row"> <!-- Đảm bảo đây là div cha của hai cột -->
			<!-- ===== SIDEBAR COLUMN (Search & Filter) - PHẢI Ở BÊN TRÁI ===== -->
			<div class="col-lg-2 col-md-4 order-md-1 order-lg-1">
				<!-- Search product -->
				<form method="get" asp-controller="Product" asp-action="Index">
					<div class="panel-search w-full p-t-10 p-b-15">
						@* <h4 class="mtext-105 cl2 p-b-10">Tìm kiếm</h4> *@
						<div class="bor8 dis-flex p-l-15">
							<button type="submit" class="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
								<i class="zmdi zmdi-search"></i>
							</button>
							<input class="mtext-107 cl2 size-114 plh2 p-r-15"
							       type="text"
							       name="searchTerm"
							       value="@Model?.SearchTerm"
							       placeholder="Search" />
						</div>
					</div>
				</form>

				<!-- Filter -->
				<div class="panel-filter w-full p-t-10">
					<h4 class="mtext-105 cl2 p-b-10 p-t-15">Lọc sản phẩm</h4>
					<div class="wrap-filter w-full p-lr-15 p-t-27 p-b-17">

						<!-- Sắp xếp -->
						<div class="filter-col p-b-15">
							<div class="filter-title-toggle flex-sb-m p-b-10 pointer">
								<span class="mtext-102 cl2">Sắp xếp</span>
								<div>
									<i class="zmdi zmdi-plus filter-icon filter-icon-plus"></i>
									<i class="zmdi zmdi-minus filter-icon filter-icon-minus dis-none"></i>
								</div>
							</div>
							<div class="filter-options dis-none p-t-10">
								<ul>
									<li class="p-b-6">
										<a href="@Url.Action("Index", new { categoryId = Model.SelectedCategoryId, sortOption = "" })"
										   class="filter-link stext-106 trans-04 @(string.IsNullOrWhiteSpace(Model.SortOption) ? "filter-link-active" : "")">
											Mặc định
										</a>
									</li>
									<li class="p-b-6">
										<a href="@Url.Action("Index", new { categoryId = Model.SelectedCategoryId, sortOption = "newest" })"
										   class="filter-link stext-106 trans-04 @(Model.SortOption == "newest" ? "filter-link-active" : "")">
											Ngày đăng
										</a>
									</li>
									<li class="p-b-6">
										<a href="@Url.Action("Index", new { categoryId = Model.SelectedCategoryId, sortOption = "price_desc" })"
										   class="filter-link stext-106 trans-04@(Model.SortOption == "price_desc" ? "filter-link-active" : "")">
											Giá giảm dần
										</a>
									</li>
									<li class="p-b-6">
										<a href="@Url.Action("Index", new { categoryId = Model.SelectedCategoryId, sortOption = "price_asc" })"
										   class="filter-link stext-106 trans-04 @(Model.SortOption == "price_asc" ? "filter-link-active" : "")">
											Giá tăng dần
										</a>
									</li>
								</ul>
							</div>
						</div>

						<!-- Cấp độ -->
						<div class="filter-col p-b-15">
							<div class="filter-title-toggle flex-sb-m p-b-10 pointer">
								<span class="mtext-102 cl2">Cấp độ</span>
								<div>
									<i class="zmdi zmdi-plus filter-icon filter-icon-plus"></i>
									<i class="zmdi zmdi-minus filter-icon filter-icon-minus dis-none"></i>
								</div>
							</div>
							<div class="filter-options dis-none p-t-10">
								<ul>
									<li class="p-b-6">
										<a href="@Url.Action("Index", new { categoryId = Model.SelectedCategoryId, gradeOption = "" })"
										   class="filter-link stext-106 trans-04 @(string.IsNullOrWhiteSpace(Model.GradeOption) ? "filter-link-active" : "")">
											Tất cả
										</a>
									</li>
									@if (Model != null && Model.Grades.Any())
									{
										@foreach (var item in Model.Grades)
										{
											<li class="p-b-6">
												<a href="@Url.Action("Index", new { categoryId = Model.SelectedCategoryId, gradeOption = @item.GradeName })"
												   class="filter-link stext-106 trans-04 @(Model.GradeOption == @item.GradeName ? "filter-link-active" : "")">
													@item.GradeName
												</a>
											</li>
										}
									}
								</ul>
							</div>
						</div>

						<!-- Thương hiệu -->
						<div class="filter-col p-b-15">
							<div class="filter-title-toggle flex-sb-m p-b-10 pointer">
								<span class="mtext-102 cl2">Thương hiệu</span>
								<div>
									<i class="zmdi zmdi-plus filter-icon filter-icon-plus"></i>
									<i class="zmdi zmdi-minus filter-icon filter-icon-minus dis-none"></i>
								</div>
							</div>
							<div class="filter-options dis-none p-t-10">
								<ul>
									<li class="p-b-6">
										<a href="@Url.Action("Index", new { categoryId = Model.SelectedCategoryId, brandOption = "" })"
										   class="filter-link stext-106 trans-04 @(string.IsNullOrWhiteSpace(Model.BrandOption) ? "filter-link-active" : "")">
											Tất cả
										</a>
									</li>
									@if (Model != null && Model.Brands.Any())
									{
										@foreach (var item in Model.Brands)
										{
											<li class="p-b-6">
												<a href="@Url.Action("Index", new { categoryId = Model.SelectedCategoryId, brandOption = @item.BrandName })"
												   class="filter-link stext-106 trans-04 @(Model.BrandOption == @item.BrandName ? "filter-link-active" : "")">
													@item.BrandName
												</a>
											</li>
										}
									}
								</ul>
							</div>
						</div>
					</div>
				</div>
			</div> <!-- End Sidebar Column -->

			<!-- ===== MAIN CONTENT COLUMN (Products & Categories) ===== -->
			<div class="col-lg-10 col-md-8 order-md-2 order-lg-2">
				<div class="flex-w flex-l-m filter-tope-group m-tb-10">
					<a href="@Url.Action("Index", new { categoryId = (int?)null })"
					   class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 @(Model.SelectedCategoryId == null ? "how-active1" : "")">
						TẤT CẢ SẢN PHẨM
					</a>
					@if (Model != null && Model.Categories.Any())
					{
						@foreach (var item in Model.Categories)
						{
							<a href="@Url.Action("Index", new { categoryId = item.CategoryId })"
							   class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 @(Model.SelectedCategoryId == item.CategoryId ? "how-active1" : "")">
								@item.CategoryName.ToUpper()
							</a>
						}
					}
				</div>

				<div class="row isotope-grid">
					@if (Model != null && Model.Products.Any())
					{
						@foreach (var item in Model.Products)
						{
							var categoryClassName = "default-product-class";
							if (item.Category != null && !string.IsNullOrEmpty(item.Category.CategoryName))
							{
								categoryClassName = item.Category.CategoryName
									.ToLower()
									.Replace(" ", "-")
									.Replace("&", "and");
							}
							<div class="col-sm-6 col-md-6 col-lg-3 p-b-35 isotope-item @categoryClassName">
								<div class="block2">
									<div class="block2-pic hov-img0">
										@{
											var imgUrl = "~/images/placeholder.png";
											if (item.PrimaryImage != null && !string.IsNullOrEmpty(item.PrimaryImage.ImageUrl))
											{
												imgUrl = item.PrimaryImage.ImageUrl;
											}
										}
										<img src="@Url.Content(imgUrl)" alt="@item.Name"
										     style="width: 100%; height: 342px; object-fit: cover;" />
										<a href="#"
										   class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1"
										   data-product-id="@item.ProductId">
											Quick View
										</a>
									</div>
									<div class="block2-txt flex-w flex-t p-t-14">
										<div class="block2-txt-child1 flex-col-l ">
											<a asp-controller="Product" asp-action="Detail" asp-route-id="@item.ProductId"
											   class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6 truncate-name">
												@Html.DisplayFor(modelItem => item.Name)
											</a>
											<span class="stext-105 cl3">
												@item.Price.ToString("N0") VND
											</span>
										</div>
									</div>
								</div>
							</div>
						}
					}
					else
					{
						<p>No products available at the moment.</p>
					}
				</div>

				<div class="flex-c-m flex-w w-full p-t-45">
					<a href="#" class="flex-c-m stext-101 cl5 size-103 bg2 bor1 hov-btn1 p-lr-15 trans-04">
						Load More
					</a>
				</div>
			</div> <!-- End Main Content Column -->

		</div> <!-- End Row -->
	</div> <!-- End Container -->
</div>

<!-- Back to top -->
<div class="btn-back-to-top" id="myBtn">
		<span class="symbol-btn-back-to-top">
			<i class="zmdi zmdi-chevron-up"></i>
		</span>
</div>

<!-- Modal1 -->
<div class="wrap-modal1 js-modal1 p-t-60 p-b-20"> @* Đã có js-modal1 *@
	<div class="overlay-modal1 js-hide-modal1"></div>

	<div class="container">
		<div class="bg0 p-t-60 p-b-30 p-lr-15-lg how-pos3-parent">
			<button class="how-pos3 hov3 trans-04 js-hide-modal1">
				<img src="@Url.Content("~/images/icons/icon-close.png")" alt="CLOSE">
			</button>

			<div class="row">
				<div class="col-md-6 col-lg-7 p-b-30">
					<div class="p-l-25 p-r-30 p-lr-0-lg">
						<div class="wrap-slick3 flex-sb flex-w">
							<div class="wrap-slick3-dots js-modal-slick-dots"></div> @* Class để target *@
							<div
								class="wrap-slick3-arrows flex-sb-m flex-w js-modal-slick-arrows"></div> @* Class để target *@

							<div class="slick3 gallery-lb js-modal-slick-gallery"> @* Class để target *@
								@* Nội dung gallery sẽ được JS điền, có thể để 1 placeholder *@
								<div class="item-slick3-placeholder text-center p-5">
									<i class="fa fa-spinner fa-spin fa-3x"></i>
									<p>Loading images...</p>
								</div>
							</div>
						</div>
					</div>
				</div>

				<div class="col-md-6 col-lg-5 p-b-30">
					<div class="p-r-50 p-t-5 p-lr-0-lg">
						<h4 class="mtext-105 cl2 js-name-detail p-b-14" id="modalProductName">
							{Product Name} @* Placeholder *@
						</h4>

						<span class="mtext-106 cl2" id="modalProductPrice">
                            {Price} @* Placeholder *@
                        </span>

						<p class="stext-102 cl3 p-t-23" id="modalProductDescription">
							{Description} @* Placeholder *@
						</p>

						<div class="p-t-33">
							@* Các lựa chọn Size, Color có thể được điền động nếu API trả về *@
							<div class="flex-w flex-r-m p-b-10" id="modalSizeContainer" style="display:none;">
								<div class="size-203 flex-c-m respon6">Size</div>
								<div class="size-204 respon6-next">
									<div class="rs1-select2 bor8 bg0">
										<select class="js-select2-modal" name="modal_size" id="modalProductSize">
											<option>Choose an option</option>
										</select>
										<div class="dropDownSelect2"></div>
									</div>
								</div>
							</div>
							<div class="flex-w flex-r-m p-b-10" id="modalColorContainer" style="display:none;">
								<div class="size-203 flex-c-m respon6">Color</div>
								<div class="size-204 respon6-next">
									<div class="rs1-select2 bor8 bg0">
										<select class="js-select2-modal" name="modal_color" id="modalProductColor">
											<option>Choose an option</option>
										</select>
										<div class="dropDownSelect2"></div>
									</div>
								</div>
							</div>

							<div class="flex-w flex-r-m p-b-10">
								<div class="size-204 flex-w flex-m respon6-next">
									<div class="wrap-num-product flex-w m-r-20 m-tb-10">
										<div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m">
											<i class="fs-16 zmdi zmdi-minus"></i>
										</div>
										<input class="mtext-104 cl3 txt-center num-product" type="number"
										       name="num-product" value="1" id="modalProductQuantity">
										<div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m">
											<i class="fs-16 zmdi zmdi-plus"></i>
										</div>
									</div>
									<button data-product-id="" id="modalAddToCartBtn"
									        class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04 js-addcart-detail">
										Add to cart
									</button>
								</div>
							</div>
						</div>
						<div class="flex-w flex-m p-l-100 p-t-40 respon7">
							<div class="flex-m bor9 p-r-10 m-r-11">
								<a href="#"
								   class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 js-addwish-detail tooltip100"
								   data-tooltip="Add to Wishlist">
									<i class="zmdi zmdi-favorite"></i>
								</a>
							</div>

							<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100"
							   data-tooltip="Facebook">
								<i class="fa-brands fa-facebook"></i>
							</a>

							<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100"
							   data-tooltip="Twitter">
								<i class="fa-brands fa-twitter"></i>
							</a>

							<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100"
							   data-tooltip="Google Plus">
								<i class="fa-brands fa-google-plus"></i>
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<style>
	/* Optional: Add some styles to make the sidebar sections distinct */
	.panel-search, .panel-filter {
		margin-bottom: 20px; /* Space between search and filter panels */
	}
	.panel-filter .wrap-filter > div { /* Target direct children of wrap-filter */
		width: 100%; /* Make each filter section (Sắp xếp, Cấp độ, etc.) take full width of sidebar */
	}
	.panel-search .bor8 .size-113 { /* Nút Tìm kiếm */
		height: 38px !important; /* Chiều cao mới, ví dụ 38px. Bạn có thể điều chỉnh. */
		width: 40px !important; /* Giảm chiều rộng một chút nếu cần */
	}
	.panel-search .bor8 .size-114 { /* Input Tìm kiếm */
		height: 38px !important; /* Phải giống chiều cao của nút */
		line-height: 38px; /* Giúp căn giữa chữ theo chiều dọc trong input */
		width: calc(100% - 40px); /* Điều chỉnh lại width nếu width của button thay đổi */
	}
	/*!* Adjust product image size if needed based on new column structure *!*/
	/*.isotope-item .block2-pic img {*/
	/*	!* width: 100%; Ensure it fills its container if it's not already *!*/
	/*	!* height: auto; Or maintain aspect ratio, or fixed height like 300px *!*/
	/*}*/
	.filter-title-toggle {
		cursor: pointer; /* Biểu thị đây là phần tử có thể click */
	}
	.filter-title-toggle .mtext-102 {
		flex-grow: 1; /* Để tiêu đề chiếm hết không gian còn lại bên trái icon */
	}
	.filter-icon {
		font-size: 16px; /* Kích thước icon */
		color: #555;    /* Màu icon */
		margin-left: 8px; /* Khoảng cách giữa tiêu đề và icon */
		transition: transform 0.3s ease; /* Hiệu ứng xoay (tùy chọn) */
	}
	.truncate-name {
		display: block;
		max-width: 100%;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}
</style>


@section Scripts {
	@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
	<script>
		$(document).ready(function () {

			/*==================================================================
            [ Quick View Modal Logic ]
            ==================================================================*/
			var $modalQuickView = $('.js-modal1'); // Cache selector
			var $modalSlickGallery = $modalQuickView.find('.js-modal-slick-gallery');
			var $modalProductName = $('#modalProductName'); // Đã thêm ID trong HTML
			var $modalProductPrice = $('#modalProductPrice'); // Đã thêm ID
			var $modalProductDescription = $('#modalProductDescription'); // Đã thêm ID
			var $modalAddToCartBtn = $('#modalAddToCartBtn'); // Đã thêm ID
			var $modalProductQuantity = $('#modalProductQuantity'); // Đã thêm ID
			var $modalProductSizeSelect = $('#modalProductSize'); // Đã thêm ID
			var $modalProductColorSelect = $('#modalProductColor'); // Đã thêm ID


			$('.js-show-modal1').on('click', function (e) {
				e.preventDefault();
				var productId = $(this).data('product-id');

				if (!productId) {
					console.error("Product ID not found for Quick View.");
					swal("Error", "Product information is missing.", "error");
					return;
				}

				// 1. Show Modal and Loading State
				$modalQuickView.addClass('show-modal1');
				$modalProductName.text('Loading...');
				$modalProductPrice.text('');
				$modalProductDescription.text('Fetching details...');
				$modalAddToCartBtn.data('product-id', '').prop('disabled', true); // Disable button
				$modalProductQuantity.val(1);

				if ($modalSlickGallery.hasClass('slick-initialized')) {
					$modalSlickGallery.slick('unslick');
				}
				$modalSlickGallery.html('<div class="item-slick3-placeholder text-center p-5"><i class="fa fa-spinner fa-spin fa-3x"></i><p>Loading images...</p></div>');

				// 2. API Call
				// Cập nhật URL này cho đúng API endpoint của bạn
				var apiUrl = `api/productapi/${productId}/quickview`;

				$.ajax({
					url: apiUrl,
					type: 'GET',
					dataType: 'json',
					success: function (response) {
						if (response) {
							$modalProductName.text(response.name);
							$modalProductPrice.text(response.price.toLocaleString('vi-VN', {
								style: 'currency',
								currency: 'VND'
							}));
							$modalProductDescription.html(response.description || 'No description available.');
							$modalAddToCartBtn.data('product-id', response.productId).prop('disabled', false);

							$modalSlickGallery.empty(); // Clear loading/placeholder
							if (response.images && response.images.length > 0) {
								response.images.forEach(function (image) {
									var imageUrl = `@Url.Content("~")` + (image.imageUrl || '').replace(/^\//, '');
									var thumbUrl = `@Url.Content("~")` + (image.dataThumb || image.imageUrl || '').replace(/^\//, '');

									var slideHTML = `
                                    <div class="item-slick3" data-thumb="${thumbUrl}">
                                        <div class="wrap-pic-w pos-relative">
                                            <img src="${imageUrl}" alt="${image.altText || response.name}">
                                            <a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="${imageUrl}" target="_blank">
                                                <i class="fa fa-expand"></i>
                                            </a>
                                        </div>
                                    </div>`;
									$modalSlickGallery.append(slideHTML);
								});

								// Initialize Slick Slider
								var $arrowsContainer = $modalQuickView.find('.js-modal-slick-arrows');
								var $dotsContainer = $modalQuickView.find('.js-modal-slick-dots');

								$modalSlickGallery.slick({
									slidesToShow: 1,
									slidesToScroll: 1,
									fade: true,
									infinite: response.images.length > 1,
									autoplay: false,
									arrows: true,
									appendArrows: $arrowsContainer.length ? $arrowsContainer : $modalSlickGallery.parent(),
									prevArrow: '<button type="button" class="arrow-slick3 prev-slick3"><i class="fa fa-angle-left" aria-hidden="true"></i></button>',
									nextArrow: '<button type="button" class="arrow-slick3 next-slick3"><i class="fa fa-angle-right" aria-hidden="true"></i></button>',
									dots: true,
									appendDots: $dotsContainer.length ? $dotsContainer : $modalSlickGallery.parent(),
									dotsClass: 'slick3-dots',
									customPaging: function (slick, index) {
										var portrait = $(slick.$slides[index]).data('thumb');
										if (portrait && typeof portrait === 'string') {
											return '<img src="' + portrait.trim() + '" alt="Thumb ' + (index + 1) + '" /><div class="slick3-dot-overlay"></div>';
										}
										return '<a>' + (index + 1) + '</a>';
									}
								});
							} else {
								$modalSlickGallery.html('<div class="item-slick3-placeholder text-center p-3"><p>No images available.</p></div>');
							}

							// (Tùy chọn) Populate Size/Color dropdowns if API returns them
							// Ví dụ:
							// populateDropdown($modalProductSizeSelect, response.sizes, "Choose Size");
							// populateDropdown($modalProductColorSelect, response.colors, "Choose Color");
							// $modalQuickView.find('.js-select2-modal').select2({ minimumResultsForSearch: 20, dropdownParent: $(this).next('.dropDownSelect2') });


						} else {
							$modalProductName.text('Product Not Found');
							$modalSlickGallery.html('<div class="item-slick3-placeholder text-center p-3 text-danger"><p>Details for this product could not be loaded.</p></div>');
						}
					},
					error: function (jqXHR, textStatus, errorThrown) {
						console.error("Quick View API Error:", textStatus, errorThrown, jqXHR.responseText);
						$modalProductName.text('Error');
						$modalSlickGallery.html('<div class="item-slick3-placeholder text-center p-3 text-danger"><p>An error occurred while fetching product details.</p></div>');
						swal("Error", "Could not load product details. Please try again later.", "error");
					}
				});
			});

			$('.js-hide-modal1').on('click', function () {
				$modalQuickView.removeClass('show-modal1');
				if ($modalSlickGallery.hasClass('slick-initialized')) {
					$modalSlickGallery.slick('unslick');
				}
				// Optional: Reset content if you want a clean slate next time
				$modalSlickGallery.html('<div class="item-slick3-placeholder text-center p-5"><i class="fa fa-spinner fa-spin fa-3x"></i><p>Loading images...</p></div>');
				$modalProductName.text('{Product Name}');
				$modalProductPrice.text('{Price}');
				$modalProductDescription.text('{Description}');
			});

			// --- Add to Cart from Modal ---
			@*$modalAddToCartBtn.on('click', function () {
				var productId = $(this).data('product-id');
				var quantity = parseInt($modalProductQuantity.val()) || 1;
				var productName = $modalProductName.text();
				// var selectedSize = $modalProductSizeSelect.val(); // Get selected size
				// var selectedColor = $modalProductColorSelect.val(); // Get selected color

				if (productId) {
					console.log("Adding to cart (from Quick View):",
						{productId: productId, quantity: quantity /*, size: selectedSize, color: selectedColor */});

					// TODO: Implement actual AJAX call to your Cart API
					// $.ajax({
					//     url: '@Url.Action("AddToCartApi", "CartApi")', // Replace with your Cart API endpoint
					//     type: 'POST',
					//     contentType: 'application/json',
					//     data: JSON.stringify({
					//         productId: productId,
					//         quantity: quantity,
					//         // sizeId: selectedSize, // if applicable
					//         // colorId: selectedColor // if applicable
					//     }),
					//     success: function(response) {
					//         swal(productName, "has been added to your cart!", "success");
					//         // Update cart icon notification (you'll need a way to get total items)
					//         // $('.icon-header-noti.js-show-cart').attr('data-notify', response.cartItemCount);
					//         // $('.js-hide-modal1').click(); // Optionally close modal
					//     },
					//     error: function() {
					//         swal("Error", "Could not add product to cart. Please try again.", "error");
					//     }
					// });
					swal(productName, "is added to cart! (Simulation)", "success"); // Placeholder
				} else {
					swal("Error", "Product ID is missing. Cannot add to cart.", "error");
				}
			});*@

			// Helper function to populate dropdowns (if needed for size/color)
			// function populateDropdown($selectElement, items, defaultOptionText) {
			//     $selectElement.empty().append($('<option>', { value: "", text: defaultOptionText }));
			//     if (items && items.length > 0) {
			//         items.forEach(function(item) {
			//             // Assuming item has 'id' and 'name' properties, adjust as needed
			//             $selectElement.append($('<option>', { value: item.id, text: item.name }));
			//         });
			//         $selectElement.parent().parent().parent().show(); // Show the size/color row
			//     } else {
			//          $selectElement.parent().parent().parent().hide(); // Hide if no options
			//     }
			// }

			// Initialize other template JS if they are not self-initializing
			// or if their targets are created dynamically by your quick view.
			// For example, the select2 for modal:
			$modalQuickView.find('.js-select2-modal').each(function () {
				$(this).select2({
					minimumResultsForSearch: 20,
					dropdownParent: $(this).next('.dropDownSelect2') // Template specific
				});
			});

			// Handle quantity +/- buttons in modal (template specific)
			@*$modalQuickView.find('.btn-num-product-down').on('click', function () {
				var numProduct = Number($(this).next().val());
				if (numProduct > 1) $(this).next().val(numProduct - 1);
			});
			$modalQuickView.find('.btn-num-product-up').on('click', function () {
				var numProduct = Number($(this).prev().val());
				$(this).prev().val(numProduct + 1);
			});*@


		}); // End of $(document).ready
	</script>

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			// JavaScript cho Filter Toggle
			const filterToggles = document.querySelectorAll('.filter-title-toggle');

			filterToggles.forEach(toggle => {
				toggle.addEventListener('click', function () {
					const optionsDiv = this.nextElementSibling; // Div .filter-options
					const plusIcon = this.querySelector('.filter-icon-plus');
					const minusIcon = this.querySelector('.filter-icon-minus');
					const filterCol = this.closest('.filter-col');

					if (optionsDiv) {
						// Toggle hiển thị của optionsDiv
						optionsDiv.classList.toggle('dis-none');

						// Toggle hiển thị của icons
						plusIcon.classList.toggle('dis-none');
						minusIcon.classList.toggle('dis-none');

						// Thêm/xóa class 'is-open' trên .filter-col để có thể style thêm nếu muốn
						if (filterCol) {
							filterCol.classList.toggle('is-open');
						}
					}
				});
			});
		});
	</script>
}