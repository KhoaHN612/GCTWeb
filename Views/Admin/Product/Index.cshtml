@model IEnumerable<Product>

@{
    ViewData["Title"] = "Index";
    Layout = "../Shared/_LayoutAdmin.cshtml";
}

<div class="page-inner">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h4 class="card-title">Product Index</h4>
                <a class="btn btn-primary btn-round" asp-controller="Admin" asp-action ="ProductCreate">Create New</a>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="multi-filter-select" class="display table table-striped table-hover">
                        <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                Image
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Price)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Stock)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.IsActive)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CreatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.UpdatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Brand)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Category)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Grade)
                            </th>
                            <th class="no-filter"></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @if (item.PrimaryImage != null && !string.IsNullOrEmpty(item.PrimaryImage.ImageUrl))
                                    {
                                        <img src="@Url.Content(item.PrimaryImage.ImageUrl)" alt="Product Image" style="max-width: 75px; max-height: 75px;" />
                                    }
                                    else
                                    {
                                        <img src="@Url.Content("~/images/placeholder.png")" alt="No Image" style="max-width: 75px; max-height: 75px;" /> @* áº¢nh placeholder *@
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Stock)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsActive)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedAt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UpdatedAt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Brand.BrandName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Grade.GradeName)
                                </td>
                                <td>
                                    <a asp-action="ProductEdit" asp-route-id="@item.ProductId">Edit</a> |
                                    <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                                    <a asp-action="ProductDelete" asp-route-id="@item.ProductId">Delete</a>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @* Your DataTables script *@
    <script>
        $(document).ready(function () {
            $("#multi-filter-select").DataTable({
                pageLength: 5,
                initComplete: function () {
                    this.api()
                        .columns('th:not(.no-filter)')
                        .every(function () {
                            var column = this;
                            var select = $(
                                '<select class="form-select"><option value=""></option></select>'
                            )
                                .appendTo($(column.footer()).empty())
                                .on("change", function () {
                                    var val = $.fn.dataTable.util.escapeRegex($(this).val());

                                    column
                                        .search(val ? "^" + val + "$" : "", true, false)
                                        .draw();
                                });

                            column
                                .data()
                                .unique()
                                .sort()
                                .each(function (d, j) {
                                    select.append(
                                        '<option value="' + d + '">' + d + "</option>"
                                    );
                                });
                        });
                },
            });
        });
    </script>
}