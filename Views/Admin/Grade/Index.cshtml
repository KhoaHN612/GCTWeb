@model List<Grade>

@{
    ViewData["Title"] = "Index";
    Layout = "../Shared/_LayoutAdmin.cshtml";
}

<div class="page-inner">

    <div class="page-header">
        <h3 class="fw-bold mb-3">Grade Management</h3>
        <ul class="breadcrumbs mb-3">
            <li class="nav-home">
                <a href="#">
                    <i class="fa-solid fa-house"></i>
                </a>
            </li>
            <li class="separator">
                <i class="fa-solid fa-greater-than"></i>
            </li>
            <li class="nav-item">
                <a href="#">Grades List</a>
            </li>
        </ul>
    </div>
    <div class="col-md-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h4 class="card-title mb-0">Grades List</h4>
                <button type="button" class="btn btn-primary btn-round" data-bs-toggle="modal" data-bs-target="#addGradeModal">
                    Add Grade
                </button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="multi-filter-select" class="display table table-striped table-hover">
                        <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                        </tr>
                        </thead>
                        <tfoot>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                        </tr>
                        </tfoot>
                        <tbody>
                        @if (Model != null && Model.Any()) { @* Added null check *@
                            foreach (var grade in Model) {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => grade.GradeId)</td>
                                    <td>
                                        @Html.DisplayFor(modelItem => grade.GradeName)

                                        <form asp-controller="Admin" asp-action="DeleteGrade" asp-route-id="@grade.GradeId" method="post" class="d-inline ms-2" onsubmit="return confirm('Are you sure you want to delete grade: @Html.Encode(grade.GradeName)?');">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-link btn-danger btn-sm p-0" title="Delete">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        }
                        else {
                            <tr>
                                <td colspan="2" class="text-center">No grade found.</td> @* Reduced colspan to 2 *@
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addGradeModal" tabindex="-1" aria-labelledby="addGradeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm"> @* modal-sm makes it smaller *@
        <div class="modal-content">
            <form asp-controller="Admin" asp-action="CreateGrade" method="post" id="addGradeForm">
                @Html.AntiForgeryToken() @* Security Token *@

                <div class="modal-header">
                    <h5 class="modal-title" id="addGradeModalLabel">Add New Grade</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="gradeNameInput" class="form-label">Grade Name</label>
                        <input type="text" class="form-control" id="gradeNameInput" name="GradeName" required placeholder="Enter grade name">
                        @* 'name="GradeName"' must match the parameter name or model property in your controller action *@
                        <div class="invalid-feedback">
                            Please enter a grade name.
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Grade</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    @* Your DataTables script *@
    <script>
        $(document).ready(function () {
            $("#multi-filter-select").DataTable({
                pageLength: 5,
                initComplete: function () {
                    this.api()
                        .columns()
                        .every(function () {
                            var column = this;
                            var select = $(
                                '<select class="form-select"><option value=""></option></select>'
                            )
                                .appendTo($(column.footer()).empty())
                                .on("change", function () {
                                    var val = $.fn.dataTable.util.escapeRegex($(this).val());

                                    column
                                        .search(val ? "^" + val + "$" : "", true, false)
                                        .draw();
                                });

                            column
                                .data()
                                .unique()
                                .sort()
                                .each(function (d, j) {
                                    select.append(
                                        '<option value="' + d + '">' + d + "</option>"
                                    );
                                });
                        });
                },
            });
        });
    </script>

    <script>
        var addGradeModalElement = document.getElementById('addGradeModal');
        addGradeModalElement.addEventListener('hidden.bs.modal', function (event) {
            // Reset the form inside the modal when it's hidden
            var form = document.getElementById('addGradeForm');
            if(form) {
                form.reset();
                // If you are using Bootstrap's validation classes, you might want to remove them too
                $('#gradeNameInput').removeClass('is-invalid');
            }
        });
    </script>

}